# Starship nerd font compatible config

"$schema" = "https://starship.rs/config-schema.json"

add_newline = true

format = """
$os\
$username\
$hostname\
${custom.giturl}\
$directory\
$all\
$fill\
$status\
$cmd_duration\
$time\
$shell\
$shlvl\
${custom.ssh}\
$line_break\
$character
"""

[os]
disabled = false
format = "[$symbol]($style) [|](bright-black)"
style = "15"

[os.symbols]
Alpine = " "
Android = " "
Arch = " "
CentOS = " "
Debian = " "
Fedora = " "
Kali = " "
Linux = " "
Macos = " "
NixOS = " "
Raspbian = " "
RedHatEnterprise = " "
Redhat = " "
Ubuntu = " "
Unknown = " "
Windows = "󰍲 "

[username]
format = " [$user]($style)"
style_user = "bold 214"

[hostname]
format = "@[$hostname]($style):"
style = "bold 36"

[directory]
format = " [$path]($style)[$read_only]($read_only_style) "
read_only = " 󰌾 "

[fill]
symbol = " "

[status]
disabled = false
format = "[$symbol$status]($style) "
map_symbol = true
not_executable_symbol = " "
not_found_symbol = "󰍉 "
sigint_symbol = " "
signal_symbol = "󱠪 "
symbol = "󰅙 "

[cmd_duration]
format = "∆t [$duration]($style) "
min_time = 10_000

[time]
disabled = false
format = "  [$time]($style) "

[shell]
bash_indicator = ""
cmd_indicator = ""
disabled = false
fish_indicator = ""
format = "[|](bright-black) [$indicator]($style) "
powershell_indicator = ""
style = "white bold"
zsh_indicator = "󰰶"

[shlvl]
disabled = false
format = "[$shlvl$symbol]($style) "
symbol = "↓"

[character]
error_symbol = "[](bold red)"
success_symbol = "[](bold green)"
vimcmd_replace_one_symbol = "[](bold yellow)"
vimcmd_replace_symbol = "[](bold yellow)"
vimcmd_symbol = "[](bold green)"
vimcmd_visual_symbol = "[](bold purple)"

# Git

[git_branch]
format = "[$symbol$branch(:$remote_branch)]($style) "
symbol = " "

[git_commit]
tag_disabled = false
tag_symbol = "  "

[git_status]
ahead = '[↑$count](bold 192)'
behind = '[↓$count](bold 192)'
conflicted = '[=$count](bold 220)'
deleted = "[×$count](bold 198)"
diverged = '[↕↑$ahead_count↓$behind_count](bold 208)'
format = "([$all_status$ahead_behind]($style) )"
modified = '[!$count](bold 172)'
renamed = "[»$count](bold 105)"
staged = "[+$count](bold 34)"
stashed = '[\$$count](bold 37)'
untracked = '[?$count](bold 45)'

# Languages

[package]
format = "• [$symbol$version]($style) "
symbol = "󰏗 "

[aws]
symbol = "󰸏 "

[buf]
format = "• [$symbol($version )]($style)"
symbol = " "

[c]
format = "• [$symbol($version(-$name) )]($style)"
symbol = " "

[conda]
format = "• [$symbol$environment]($style) "
symbol = "  "

[crystal]
format = "• [$symbol($version )]($style)"
symbol = "  "

[dart]
format = "• [$symbol($version )]($style)"
symbol = "  "

[docker_context]
format = "• [$symbol$context]($style) "
symbol = "  "

[elixir]
format = "• [$symbol($version \\(OTP $otp_version\\) )]($style)"
symbol = " "

[elm]
format = "• [$symbol($version )]($style)"
symbol = "  "

[fennel]
format = "• [$symbol($version )]($style)"
symbol = " "

[golang]
format = "• [$symbol($version )]($style)"
symbol = " "

[haskell]
format = "• [$symbol($version )]($style)"
symbol = " "

[haxe]
format = "• [$symbol($version )]($style)"
symbol = "  "

[java]
format = "• [$symbol($version )]($style)"
symbol = " "

[julia]
format = "• [$symbol($version )]($style)"
symbol = "  "

[kotlin]
format = "• [$symbol($version )]($style)"
symbol = "  "

[lua]
format = "• [$symbol($version )]($style)"
symbol = "  "

[meson]
format = "• [$symbol$project]($style) "
symbol = "󰔷  "

[nim]
format = "• [$symbol($version )]($style)"
symbol = "󰆥 "

[nix_shell]
format = "• [$symbol$state( \\($name\\))]($style) "
symbol = "  "

[nodejs]
format = "• [$symbol($version )]($style)"
symbol = "󰎙 "

[ocaml]
format = "• [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)"
symbol = "  "

[perl]
format = "• [$symbol($version )]($style)"
symbol = " "

[php]
format = "• [$symbol($version )]($style)"
symbol = "󰌟  "

[python]
format = "• [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)"
symbol = "  "

[rlang]
format = "• [$symbol($version )]($style)"
symbol = "󰟔 "

[ruby]
format = "• [$symbol($version )]($style)"
symbol = " "

[rust]
format = "• [$symbol($version )]($style)"
symbol = "󱘗 "

[scala]
format = "• [$symbol($version )]($style)"
symbol = " "

[swift]
format = "• [$symbol($version )]($style)"
symbol = " "

[zig]
format = "• [$symbol($version )]($style)"
symbol = "  "

[gradle]
format = "• [$symbol($version )]($style)"
symbol = "  "

# Custom
[custom.giturl]
command = '''
remote_url=$(git remote -v | awk '{print $2}')
if [ -z "$remote_url" ]; then
  exit 1
fi
case "$remote_url" in
  *github*) 
    symbol="" ;;
  *gitlab*)
    symbol="󰮠" ;;
  *bitbucket*)
    symbol="" ;;
  *azure*)
    symbol="" ;;
  *aws*)
    symbol="" ;;
  *gitea*)
    symbol="" ;;
# Work git repo
  *pijush*)
    symbol="󰮠 " ;;
  *repo.grameenphone*)
    symbol=" " ;;
# Catch-all
  *)
    symbol="󰊢" ;;
esac
echo -e $symbol
'''
description = "Display symbol for remote git url"
format = "( $output)"
require_repo = true
shell = ["bash", "--noprofile", "--norc"]
when = true

[custom.xcode]
command = 'xcodebuild -version | grep -E "^Xcode"'
description = "Displays Xcode icon"
detect_files = ["Package.swift"]
format = "• [$symbol]($style)($output )"
style = "33 bold"
symbol = " "
when = '''
results=$(find . -maxdepth 1 -type d \
  \( -name "*.xcworkspace" \
  -o -name "*.xcodeproj" \
  -o -name "*.playground" \) \
)
if echo $results | grep -q .; then
  return
fi
exit 1
'''

[custom.ssh]
description = "Displays SSH icon"
format = "[$symbol]($style)"
style = "green bold"
symbol = " 󱘖 SSH "
when = '''
if [[ -n $SSH_CONNECTION ]]; then
  return
fi
exit 1
'''

# Disabled
[jobs]
disabled = true

[battery]
disabled = true

[memory_usage]
disabled = true
